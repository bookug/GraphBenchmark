# TODO:using XML?
# BETTER?:key file in Linux, using glib-2.0
# http://blog.csdn.net/newtonnl/article/details/8085795
#
#
#
#
#
#
[setting]
# Default index file to build.
# When you choose query directly without pointing any file, the program will loading 
# this one if exist as default.
#
defaultFile     = hf_watdiv150M_4
# Large size mode enable mark
#
largeSizeEnable = 1


# Full text index enable mark
#
fullTextEnable = 0

# Location enable mark
# 
#
locationEnable  = 0

# Distribution enable mark
# 
#
distributionEnable  = 1

# hash function type
#hashType	= linear
#		  3-gram
hashType	= linear

#
#
#
serverModeEnable = 0


#
#
#
serverPort = 5050


#
#
[database]

# Decide the background database.
# We provide four for chosen: "MySQL", "BerkeleyDB" and "BTree".
#
databaseType  = BerkeleyDB

[MySQL]
# MySQL database setting. 

# the server:Port must be connected well, and the user should be granted permissions 
# such as creating tables and inserting data into or selecting data from a table. 
server        = 172.31.222.76
Port          = 3307
userName      = root
password      = icstwip


[SQLServer]
# SQLServer database setting. 

server        = localhost
userName      = root
password      = icstwip


[BerkeleyDB]
# BerkeleyDB database setting. 

# The path where the BerkeleyDB file would be stored. Both the absolute path or 
# the relative path will be ok. Notice if you use the relative path,like "BerkeleyDB\",
# it would be actually %appPath%\BerkeleyDB\. 
databasePath  = Data/

[BPlustreeDB]
databasePath  = Data/

[query]
# Provide some query settings here. 

# Define the query mode.
# We can provide  three modes: "exactly", "wildcart" and "similarity".
# In "exactly" mode,the input query should match the literatual exactly. we use simple 
# but more effective method to build the index. It need the minor space, and response 
# in the faster speed.
# In "wildcard" mode, the input query can be part of the literatual. we use complicated
# and powerful method instead. In need more space, and spend more time in both offline 
# index and online query. 
# Now "exactly" and "wildcart" is well-completed. similarity is in process. 
# Notice that you should rebuild the offline index if you want to change this type. 
# Format:
# queryMode = exactly
#             wildcard
#             similarity
#
queryMode     = exactly

# The path where the index folder would be stored. Both 
# If you use the relative path,like "Data" it would be actually %appPath%\Data. 
# Format:
# dataPath =    Data
#               "D:/gStoreData"
#             
dataPath      = Data
